#!/bin/sh

#ansi-escape-colors:
col_r='\033[1;31m'
col_g='\033[1;32m'
col_b='\033[1;34m'
col_m='\033[1;35m'
col_c='\033[1;36m'
col_y='\033[1;33m'
col_n='\033[0m'

#Ausgabe der grundlegenden Linux-Shell kommandos:
printout_linux () {
	echo "\n\n"
	echo $col_r'Benutzerverwaltung:'
	echo $col_c'adduser        '$col_g'Hinzufügen eines Benutzers'
	echo $col_c'chsh           '$col_g'Änderung der Standard-Shell des Benutzers ("change shell")'
	echo $col_c'deluser        '$col_g'Löschung eines Benutzers ("delete user")'
	echo $col_c'groupadd       '$col_g'Hinzufügen einer Gruppe ("add group")'
	echo $col_c'groupdel       '$col_g'Löschung einer Gruppe ("delete group")'
	echo $col_c'groupmod       '$col_g'Bearbeitung einer Gruppe ("modify group")'
	echo $col_c'id             '$col_g'Anzeige der Benutzer- und Gruppenkennung (ID)'
	echo $col_c'newgrp         '$col_g'Änderung der Gruppe des aktuellen Benutzers ("new group")'
	echo $col_c'usermod        '$col_g'Bearbeitung eines Benutzerkontos ("modify user")'
	echo $col_c'chfn           '$col_g'erweiterte Benutzerinformationen\n'
	echo $col_r'Netzwerk-konfiguration:'
	echo $col_c'nslookup       '$col_g'Namensauflösung (DNS)'
	echo $col_c'ifconfig       '$col_g'Anzeigen und Konfiguration von Netzwerkgeräten ("interface configuration")'
	echo $col_c'iwconfig       '$col_g'Werkzeug für WLAN-Schnittstellen'
	echo $col_c'netstat        '$col_g'Auflistung offener Ports und bestehender Netzwerkverbindungen ("network statistics")'
	echo $col_c'ping           '$col_g'Prüfen der Erreichbarkeit anderer Rechner über ein Netzwerk'
	echo $col_c'route          '$col_g'Anzeige und Änderung der Route (Routingtabelle)'
	echo $col_c'traceroute     '$col_g'Routenverfolgung und Verbindungsanalyse\n'
	echo $col_r'Dateiverwaltung:'
	echo $col_c'cut            '$col_g'Spaltenweise Manipulation von Textdaten'
	echo $col_c'dd             '$col_g'Bit-genaues Kopieren von Datenträgern'
	echo $col_c'diff           '$col_g'Vergleich des Inhalts zweier Dateien (siehe auch patch für das Anwenden eines "Diffs")'
	echo $col_c'find           '$col_g'Suche nach Dateien'
	echo $col_c'grep           '$col_g'Durchsuchen von Dateien'
	echo $col_c'locate         '$col_g'Suche nach Dateien mit Hilfe der Datenbank locatedb'
	echo $col_c'lsof           '$col_g'Anzeige offener Dateien ("list open files")'
	echo $col_c'md5sum         '$col_g'Ermittlung und Überprüfung der MD5-Prüfsumme von Dateien'
	echo $col_c'mount/umount   '$col_g'Ein- und Aushängen eines Dateisystems'
	echo $col_c'rename         '$col_g'Umbenennung von Dateien'
	echo $col_c'rsync          '$col_g'Datensynchronisation'
	echo $col_c'sort           '$col_g'Sortieren von Dateien nach vorgegebenen Kriterien'
	echo $col_c'split          '$col_g'Aufteilung grosser Dateien in mehrere kleine'
	echo $col_c'tree           '$col_g'Verzeichnishierarchie rekursiv als Baumstruktur anzeigen'
	echo $col_c'updatedb       '$col_g'Aktualisierung der locate-Datenbank ("update database")\n'
	echo $col_r'Rechteverwaltung:'
	echo $col_c'chattr         '$col_g'Veränderung von Datei-Attributen und Rechten auf ext2- und ext3-Dateisystemen ("change attributes")'
	echo $col_c'chgrp          '$col_g'Festlegung der Gruppenzugehörigkeit von Dateien ("change group")'
	echo $col_c'chmod          '$col_g'Veränderung der Zugriffsrechte von Dateien ("change mode")'
	echo $col_c'chown          '$col_g'Festlegung des Besitzers und der Gruppenzugehörigkeit von Dateien ("change ownership")\n'
	echo $col_r'Systemüberwachung:'
	echo $col_c'dmesg          '$col_g'Kernelmeldungen auf den Bildschirm ausgeben lassen; nützlich bei der Fehlersuche'
	echo $col_c'crontab        '$col_g'Einstellung von zeitgesteuerten Skript-/Befehlsaufrufen'
	echo $col_c'df             '$col_g'Ausgabe des Speicherplatzes aller eingehängten Laufwerke ("disk free")'
	echo $col_c'du             '$col_g'Ausgabe des Speicherverbrauchs von Verzeichniessen ("disk usage")'
	echo $col_c'free           '$col_g'Ausgabe der Arbeitsses Speicherauslastung'
	echo $col_c'kill           '$col_g'Beendigung eines durch die Prozess-ID gekennzeichneten Prozessen'
	echo $col_c'killall        '$col_g'Beendigung von nach dem Prozess namen gekennzeichneten Prozesses'
	echo $col_c'pkill          '$col_g'Beendigung eines nach seinem Namen/durch einen regulären Ausdruck gekennzeichneten Prozesses'
	echo $col_c'ps             '$col_g'Ausgabe aller laufenden Prozesse status)'
	echo $col_c'pstree         '$col_g'Ausgabe aller laufenden Prozesse in Baumform'
	echo $col_c'script         '$col_g'Terminalsitzungen mitschneiden (siehe auch scriptreplay)'
	echo $col_c'stat           '$col_g'Zeitstempel von Dateien und Ordnern anzeigen'
	echo $col_c'top            '$col_g'Ausgabe der Prozessorauslastung'
	echo $col_c'uptime         '$col_g'Angabe der Laufzeit und Auslastung des Computers'
	echo $col_c'vmstat         '$col_g'erste Analyse von Engpässen\n'
	echo $col_r'Grundkommandos:'
	echo $col_c'cat            '$col_g'Dateien Anzeigen ("concatenate")'
	echo $col_c'cd             '$col_g'Wechsel des Arbeitsverzeichnisses ("change directory")'
	echo $col_c'cp             '$col_g'Kopie von Dateien oder Verzeichnisses ("copy")'
	echo $col_c'date           '$col_g'Anzeige von Datum und Zeit'
	echo $col_c'echo           '$col_g'Anzeige eines Textes'
	echo $col_c'exit           '$col_g'Ende der Sitzung'
	echo $col_c'info           '$col_g'Anzeige einer Hilfe-Datei'
	echo $col_c'ln             '$col_g'Link zu einer Datei oder einem Verzeichnis ("link")'
	echo $col_c'ls             '$col_g'Auflistung von Dateien ("list")'
	echo $col_y'man            '$col_y'Ausgabe der Handbuchseite zu einem Befehl oder einer Anwendung ("manual")'
	echo $col_c'mkdir          '$col_g'Erzeugung von Verzeichniss ("make directory")'
	echo $col_c'mmv            '$col_g'Multiple move (Datei-Mehrfachoperationen mit Hilfe von Wildcard-Mustern)'
	echo $col_c'mv             '$col_g'Kopieren einer Datei und Löschen der Ursprungsdatei ("move")'
	echo $col_c'pwd            '$col_g'Anzeige des aktuellen Verzeichniss ("print working directory")'
	echo $col_c'rm             '$col_g'Löschen von Dateien und Verzeichnisse ("remove")'
	echo $col_c'rmdir          '$col_g'Löschen eines leeren Verzeichnisses ("remove directory")'
	echo $col_c'sudo           '$col_g'Root-Rechte für den Benutzer ("substitute user do")'
	echo $col_c'touch          '$col_g'Erstellen von Dateien\n\n'$col_n
}

printout_hashcat () {
	echo "\n\n"
	echo $col_r"Hashcat Beispiele zur Passwortsicherheit:\n"
	echo $col_y"Hashcat Hilfe  "$col_g"hashcat --help\n"
	echo $col_r"Benutzte Parameter:"
	echo $col_c"-a             "$col_g"AttackMode (3 = BruteForce)"
	echo $col_c"-m             "$col_g"Method (0 = MD5)"
	echo $col_c"-1             "$col_g"Benutzerdefinierte Maske 1\n"
	echo $col_r"Benutzte Maske:"
	echo $col_c"?l             "$col_g"abcdefghijklmnopqrstuvwxyz" 
	echo $col_c"?u             "$col_g"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	echo $col_c"?d             "$col_g"0123456789"
	echo $col_c"?s             "$col_g"Sonderzeichen\n"
	echo $col_r"Beispiel mit MD5:"
	echo $col_c"echo -n 'Test!' | md5sum | cut -d ' ' -f1 > hash.txt"
	echo $col_c"hashcat -a 3 -m 0 -1 ?l?u?d?s hash.txt ?1?1?1?1?1\n"
	echo $col_r"Beispiel mit SHA-1:"
	echo $col_c"echo -n 'Test!' | sha1sum | cut -d ' ' -f1 > hash.txt"
	echo $col_c"hashcat -a 3 -m 100 -1 ?l?u?d?s hash.txt ?1?1?1?1?1\n"
	echo $col_r"Beispiel mit SHA-256:"
	echo $col_c"echo -n 'Test!' | sha256sum | cut -d ' ' -f1 > hash.txt"
	echo $col_c"hashcat -a 3 -m 1400 -1 ?l?u?d?s hash.txt ?1?1?1?1?1\n"
	echo $col_r"Beispiel mit SHA-512:"
	echo $col_c"echo -n 'Test!' | sha512sum | cut -d ' ' -f1 > hash.txt"
	echo $col_c"hashcat -a 3 -m 1700 -1 ?l?u?d?s hash.txt ?1?1?1?1?1\n"
}

printout_docker_install () {
	echo "\n\n"
	echo $col_r"Docker Installation – Die Grundlagen (Debian8-64Bit):\n"
	echo $col_g"Docker ist ein „hoch-frequentiertes“ Projekt in welchem es häufig"
	echo $col_g"Änderungen und neue Releases gibt. Um immer auf einer aktuellen "
	echo $col_g"Version zu sein empfiehlt es sich, Docker aus dem offiziellem Docker"
	echo $col_g"Repository zu installieren. Um dies zu ermöglichen gehen sie bitte"
	echo $col_g"wie folgt vor:\n"
	echo $col_r"System auf aktuellen Stand bringen:"
	echo $col_c"sudo apt-get update && sudo apt-get upgrade -y"
	echo $col_r"„apt-https-transport“ installieren:"
	echo $col_c"sudo apt-get install apt-transport-https ca-certificates -y\n"
	echo $col_r"PGP-Key für das Docker Repository hinzufügen:"
	echo $col_c"sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80"
	echo $col_c"   --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n"
	echo $col_r"Docker Repository hinzufügen:"
	echo $col_c"touch /etc/apt/sources.list.d/docker.list"
	echo $col_c"echo „deb https://apt.dockerproject.org/repo debian-jessie main” >>"
	echo $col_c"   /etc/apt/sources.list.d/docker.list"
	echo $col_r"Docker aus Repository installieren:\n"
	echo $col_c"sudo apt-get update && sudo apt-get install docker-engine\n"
	echo $col_r"Docker Starten/Stoppen und Staus überprüfen:"
	echo $col_c"sudo service docker start"
	echo $col_c"sudo service docker stop"
	echo $col_c"sudo service docker status\n"
	echo $col_r"Docker Installation testen:"
	echo $col_c"sudo docker run hello-world"
	echo $col_r"output:"
	echo $col_c"Hello from Docker."
	echo $col_c"This message shows that your installation appears to be working correctly.\n"
	echo $col_r"Weitere Informationen zu Docker siehe:"
	echo $col_y"https://docs.docker.com/"
	echo $col_y"https://www.linuxbabe.com/linux-server/install-docker-on-debian-8-jessie-server"$col_n
}

printout_docker_gui () {
	echo "\n\n"
	echo $col_r"Docker GUI – Portainer für einfaches verwalten:\n"
	echo $col_g"Für den einfachen Einstieg in Docker empfiehlt sich das Grafische"
	echo $col_g"User Interface Portainer. Portainer bietet eine einfache grafische"
	echo $col_g"Konfigurations- und Verwaltungsmöglichkeit über ein Web-Interface"
	echo $col_g"via Web-Browser, unterstützt aber noch nicht alle aktuellen Features.\n"
	echo $col_r"Installation:"
	echo $col_c"docker pull portainer/portainer"
	echo $col_c"docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer\n"
	echo $col_r"Portainer Starten/Stoppen:"
	echo $col_c"docker start portainer"
	echo $col_c"docker stop portainer\n"
	echo $col_r"Zugriff auf das Portainer Web-Interface:"
	echo $col_c"http://127.0.0.1:9000\n"
	echo $col_r"Weitere Informationen zu Portainer siehe:"
	echo $col_y"https://hub.docker.com/r/portainer/portainer/\n"$col_n

}

printout_docker_images () {
	echo "\n\n"
	echo $col_r"Docker Images verwalten - Die Grundlagen:\n"
	echo $col_g"Die Basis von Docker Bilden die Images\n"
	echo $col_r"Image auf https://hub.docker.com suchen:"
	echo $col_c"docker search <imageName>"
	echo $col_g"Bsp:"
	echo $col_c"docker search debian\n"
	echo $col_r"Image von https://hub.docker.com herunterladen:"
	echo $col_c"docker pull <maintainer/imagename:tag>"
	echo $col_g"Bsp:"
	echo $col_c"docker pull fugitivus/debian:jessie\n"
	echo $col_r"Image auf https://hub.docker.com hoch-laden:"
	echo $col_y"!!! Nur mit Dockerhub Account möglich."
	echo $col_y"!!! User muss bereits connected sein."
	echo $col_y"!!! siehe docker login --help\n"
	echo $col_r"docker push <maintainer/imagename:tag>"
	echo $col_g"Bsp:"
	echo $col_c"docker push fugitivus/debian:jessie"
	echo $col_r"Image aus Dockerfile erstellen:"
	echo $col_c"docker build -t <maintainer/imagename:tag> -f <dockerfile> ."
	echo $col_g"Bsp:"
	echo $col_c"docker build -t fugitivus/debian:jessie -f debian.docker .\n"
	echo $col_r"Weitere Informationen:"
	echo $col_y"docker --help / docker pull –help / docker search –help etc."$col_n
}

printout_docker_container () {
	echo "\n\n"
	echo "coming soon..."
}


if [ "$1" = "linux.shell" ]
	then
		printout_linux

	elif [ "$1" = "linux.hashcat" ]
		then
		printout_hashcat
	elif [ "$1" = "docker.install" ]
		then
		printout_docker_install
	elif [ "$1" = "docker.gui" ]
		then
		printout_docker_gui
	elif [ "$1" = "docker.images" ]
		then
		printout_docker_images

	elif [ "$1" = "docker.container" ]
		then
		printout_docker_container

	else
		echo $col_r'\nboon-helper script usage = boon-helper <parameter>'
		echo $col_g'\nParameter sind:'
		echo $col_c'linux.shell       -  '$col_g'Kleine Befehlsübesicht für die Linux-Shell.'
		echo $col_c'linux.hashcat     -  '$col_g'Kleine Befehlsübersicht für hashcat basics.'
		echo $col_c'docker.install    -  '$col_g'Kleine Installationsanleitung für Docker.'
		echo $col_c'docker.gui        -  '$col_g'Kleine Anleitung für Portainer (eine Docker GUI)'
		echo $col_c'docker.images     -  '$col_g'Docker Images verwalten (kleine Anleitung)'
		echo $col_c'docker.container  -  '$col_g'Docker Container verwalten (kleine Anleitung)'
              
fi
echo $col_n
